import pytest, random_password_generator, string

# check if the site can be reached ... 
def test_random_password_generator():
    with random_password_generator.app.test_client() as test_client:
        response = test_client.get('/')
        assert response.status_code == 200 
    # this should pass ... 

# test cases ...
@pytest.mark.parametrize("case_1, case_2, passwrd_length", [(string.ascii_letters, string.ascii_letters, 5), # should pass, eventhough the same list is used because different sets in the list can be returned ... 
                                                            (['M'], ['M'], 1), # failing since only M can be returned ... 
                                                            (string.digits, string.punctuation, 10) # expected to pass as well, since different lists are used this means the output are definitely unique ...
                                                            ])
# see if the same password is returned or if the passwords are truly random ...
def test_password_generator(case_1, case_2, passwrd_length):
    assert random_password_generator.password_generator(case_1, passwrd_length) != random_password_generator.password_generator(case_2, passwrd_length)
    
# it is expected that there would be 1 fail case and 3 passed cases ...